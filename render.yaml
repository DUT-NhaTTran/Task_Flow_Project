services:
  # PostgreSQL Database
  - type: pserv
    name: taskflow-database
    env: docker
    plan: free
    databases:
      - name: taskflow
        user: taskflow

  # AI Service (Python FastAPI) - Náº±m trong backend/AI-Service
  - type: web
    name: taskflow-ai-service
    env: python3
    buildCommand: "cd backend/AI-Service && pip install -r requirements.txt"
    startCommand: "cd backend/AI-Service && uvicorn main:app --host 0.0.0.0 --port $PORT"
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: PYTHON_VERSION
        value: "3.11.0"
      - key: ENVIRONMENT
        value: "production"

  # User Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-user-service
    env: docker
    dockerfilePath: backend/User-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Accounts Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-accounts-service
    env: docker
    dockerfilePath: backend/Accounts-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Projects Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-projects-service
    env: docker
    dockerfilePath: backend/Projects-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Tasks Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-tasks-service
    env: docker
    dockerfilePath: backend/Tasks-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # File Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-file-service
    env: docker
    dockerfilePath: backend/File-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Sprints Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-sprints-service
    env: docker
    dockerfilePath: backend/Sprints-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Notifications Service (Java Spring Boot) - Using Docker
  - type: web
    name: taskflow-notifications-service
    env: docker
    dockerfilePath: backend/Notifications-Service/Dockerfile
    plan: free
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: taskflow-database
          property: connectionString
      - key: SPRING_PROFILES_ACTIVE
        value: "render"

  # Frontend (Next.js)
  - type: web
    name: taskflow-frontend
    env: node
    buildCommand: "cd frontend && npm install && npm run build"
    startCommand: "cd frontend && npm run start"
    plan: free
    envVars:
      - key: NODE_ENV
        value: "production"
      - key: REACT_APP_AI_SERVICE_URL
        fromService:
          type: web
          name: taskflow-ai-service
          property: host
      - key: REACT_APP_USER_SERVICE_URL
        fromService:
          type: web
          name: taskflow-user-service
          property: host
      - key: REACT_APP_ACCOUNTS_SERVICE_URL
        fromService:
          type: web
          name: taskflow-accounts-service
          property: host
      - key: REACT_APP_PROJECTS_SERVICE_URL
        fromService:
          type: web
          name: taskflow-projects-service
          property: host
      - key: REACT_APP_TASKS_SERVICE_URL
        fromService:
          type: web
          name: taskflow-tasks-service
          property: host
      - key: REACT_APP_FILE_SERVICE_URL
        fromService:
          type: web
          name: taskflow-file-service
          property: host
      - key: REACT_APP_SPRINTS_SERVICE_URL
        fromService:
          type: web
          name: taskflow-sprints-service
          property: host
      - key: REACT_APP_NOTIFICATIONS_SERVICE_URL
        fromService:
          type: web
          name: taskflow-notifications-service
          property: host 